local layering = require "assets.layering"
local defrx=require "defrx.defrx"

function init(self)
	self.interactable=true
	msg.post("#outline", "disable")
	defrx.create_stream("dummy")
	defrx.observe(self, "dummy")
	go.set("#outline", "offset", vmath.vector4(0.02,0,0,0))
	go.set("#outline", "bordercolor", vmath.vector4(0,1,0,0.6))
end

function update(self, dt)
	layering.update(self)
end

function on_message(self, message_id, message, sender)
	defrx.on_message(self, message_id, message, sender)
	if message_id==hash("check_interactable") then
		if self.interactable then
			msg.post("#sprite", "disable")
			msg.post("#outline", "enable")
		else
			msg.post(sender, "release_target")
		end
	end
	if message_id==hash("target_released") then
		msg.post("#sprite", "enable")
		msg.post("#outline", "disable")
	end
	if message_id==hash("trigger_response") then
		if not message.enter then
			msg.post("#sprite", "enable")
			msg.post("#outline", "disable")
			msg.post(message.other_id, "release_target")
		end
	end
	if message_id==hash("interact") then
		defrx.notify("garlic")
		msg.post(sender, "cost_hp")
		msg.post("#sprite", "enable")
		msg.post("#outline", "disable")
		self.interactable=false
		self.day=0
		defrx.observe(self, "day", function(self, message_id, message)
			self.day=self.day+1
			if self.day==3 then
				self.interactable=true
				defrx.cancel_all_observing(self)
			end
		end)
	end
end